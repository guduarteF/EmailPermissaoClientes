// <auto-generated />
using EmailPermissãoClientes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmailPermissãoClientes.Migrations
{
    [DbContext(typeof(PermissaoDbContext))]
    [Migration("20241011221135_EditAndGetClientInfo")]
    partial class EditAndGetClientInfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmailPermissãoClientes.Models.PermissaoCliente", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientID"));

                    b.Property<int>("EnviarParaID")
                        .HasColumnType("int");

                    b.Property<int>("FormaEnvioRmID")
                        .HasColumnType("int");

                    b.Property<bool>("Permitido")
                        .HasColumnType("bit");

                    b.Property<int>("TipoEmailID")
                        .HasColumnType("int");

                    b.HasKey("ClientID");

                    b.ToTable("permissaoClientes");
                });

            modelBuilder.Entity("EmailPermissãoClientes.Models.PermissaoEnviarPara", b =>
                {
                    b.Property<int>("EnviarParaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnviarParaID"));

                    b.Property<string>("Descrição")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("permissaoClientesClientID")
                        .HasColumnType("int");

                    b.HasKey("EnviarParaID");

                    b.HasIndex("permissaoClientesClientID");

                    b.ToTable("permissaoEnviarPara");
                });

            modelBuilder.Entity("EmailPermissãoClientes.Models.PermissaoFormaEnvio", b =>
                {
                    b.Property<int>("FormaEnvioRmID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormaEnvioRmID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("permissaoClientesClientID")
                        .HasColumnType("int");

                    b.HasKey("FormaEnvioRmID");

                    b.HasIndex("permissaoClientesClientID");

                    b.ToTable("permissaoFormaEnvios");
                });

            modelBuilder.Entity("EmailPermissãoClientes.Models.PermissaoTipo", b =>
                {
                    b.Property<int>("TipoEmailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoEmailID"));

                    b.Property<string>("Descrição")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("permissaoClientesClientID")
                        .HasColumnType("int");

                    b.HasKey("TipoEmailID");

                    b.HasIndex("permissaoClientesClientID");

                    b.ToTable("permissaoTipos");
                });

            modelBuilder.Entity("EmailPermissãoClientes.Models.PermissaoEnviarPara", b =>
                {
                    b.HasOne("EmailPermissãoClientes.Models.PermissaoCliente", "permissaoClientes")
                        .WithMany()
                        .HasForeignKey("permissaoClientesClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("permissaoClientes");
                });

            modelBuilder.Entity("EmailPermissãoClientes.Models.PermissaoFormaEnvio", b =>
                {
                    b.HasOne("EmailPermissãoClientes.Models.PermissaoCliente", "permissaoClientes")
                        .WithMany()
                        .HasForeignKey("permissaoClientesClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("permissaoClientes");
                });

            modelBuilder.Entity("EmailPermissãoClientes.Models.PermissaoTipo", b =>
                {
                    b.HasOne("EmailPermissãoClientes.Models.PermissaoCliente", "permissaoClientes")
                        .WithMany()
                        .HasForeignKey("permissaoClientesClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("permissaoClientes");
                });
#pragma warning restore 612, 618
        }
    }
}
